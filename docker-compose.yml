version: '3.9'

services:
  #################################################################
  #                           DATABASES                           #
  #################################################################
  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpass
      POSTGRES_DB: user_db
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  post-db:
    image: postgres:15
    container_name: post-db
    environment:
      POSTGRES_USER: post
      POSTGRES_PASSWORD: postpass
      POSTGRES_DB: post_db
    volumes:
      - post_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  feed-db:
    image: postgres:15
    container_name: feed-db
    environment:
      POSTGRES_USER: feed
      POSTGRES_PASSWORD: feedpass
      POSTGRES_DB: feed_db
    volumes:
      - feed_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  feedback-db:
    image: postgres:15
    container_name: feedback-db
    environment:
      POSTGRES_USER: feedback
      POSTGRES_PASSWORD: feedbackpass
      POSTGRES_DB: feedback_db
    volumes:
      - feedback_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  chat-db:
    image: postgres:15
    container_name: chat-db
    environment:
      POSTGRES_USER: chat
      POSTGRES_PASSWORD: chatpass
      POSTGRES_DB: chat_db
    volumes:
      - chat_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  notification-db:
    image: postgres:15
    container_name: notification-db
    environment:
      POSTGRES_USER: notify
      POSTGRES_PASSWORD: notifypass
      POSTGRES_DB: notification_db
    volumes:
      - notification_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  #################################################################
  #                           CACHES / QUEUES                     #
  #################################################################
  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - socialnet

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - socialnet

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOO_ENABLE_AUTH=no
    ports:
      - "2181:2181"
    networks:
      - socialnet

  #################################################################
  #                           MINIO / S3                          #
  #################################################################
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"   # S3-compatible API
      - "9001:9001"   # Web console
    volumes:
      - minio_data:/data
    networks:
      - socialnet

  #################################################################
  #                   CORE MICROSERVICES                         #
  #################################################################
  user-service:
    container_name: user-service
    build: ./user-service  
    environment:
      DB_HOST: user-db
      DB_USER: user
      DB_PASSWORD: userpass
      DB_NAME: user_db
    depends_on:
      - user-db
    networks:
      - socialnet
    ports:
      - "8081:8081"

  post-service:
    container_name: post-service
    build: ./post-service
    environment:
      DB_HOST: post-db
      DB_USER: post
      DB_PASSWORD: postpass
      DB_NAME: post_db
      MEDIA_SERVICE_URL: http://minio:9000
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - post-db
      - kafka
      - minio
    networks:
      - socialnet
    ports:
      - "8082:8082"

  feed-service:
    container_name: feed-service
    build: ./feed-service
    environment:
      DB_HOST: feed-db
      DB_USER: feed
      DB_PASSWORD: feedpass
      DB_NAME: feed_db
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - feed-db
      - redis
      - kafka
    networks:
      - socialnet
    ports:
      - "8083:8083"

  feedback-service:
    container_name: feedback-service
    build: ./feedback-service
    environment:
      DB_HOST: feedback-db
      DB_USER: feedback
      DB_PASSWORD: feedbackpass
      DB_NAME: feedback_db
      REDIS_HOST: redis
    depends_on:
      - feedback-db
      - redis
    networks:
      - socialnet
    ports:
      - "8084:8084"

  chat-service:
    container_name: chat-service
    build: ./chat-service
    environment:
      DB_HOST: chat-db
      DB_USER: chat
      DB_PASSWORD: chatpass
      DB_NAME: chat_db
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - chat-db
      - redis
      - kafka
    networks:
      - socialnet
    ports:
      - "8085:8085"

  notification-service:
    container_name: notification-service
    build: ./notification-service
    environment:
      DB_HOST: notification-db
      DB_USER: notify
      DB_PASSWORD: notifypass
      DB_NAME: notification_db
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - notification-db
      - kafka
    networks:
      - socialnet
    ports:
      - "8086:8086"

  search-service:
    container_name: search-service
    build: ./search-service
    environment:
      ES_HOST: elasticsearch
    depends_on:
      - kafka
    networks:
      - socialnet
    ports:
      - "8087:8087"

  friend-service:
    container_name: friend-service
    build: ./friend-service
    environment:
      DB_HOST: user-db
      DB_USER: user
      DB_PASSWORD: userpass
      DB_NAME: user_db
    depends_on:
      - user-db
    networks:
      - socialnet
    ports:
      - "8088:8088"

  media-service:
    container_name: media-service
    build: ./media-service
    environment:
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: minio123
    depends_on:
      - minio
    networks:
      - socialnet
    ports:
      - "8089:8089"

  #################################################################
  #                   API GATEWAY / LOAD BALANCER
  #################################################################
  loadbalancer:
    image: nginx:latest
    container_name: loadbalancer
    depends_on:
      - api-gateway
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - socialnet

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    environment:
      USER_SERVICE_URL: http://user-service:8081
      POST_SERVICE_URL: http://post-service:8082
      FEED_SERVICE_URL: http://feed-service:8083
      FEEDBACK_SERVICE_URL: http://feedback-service:8084
      CHAT_SERVICE_URL: http://chat-service:8085
      NOTIFICATION_SERVICE_URL: http://notification-service:8086
      SEARCH_SERVICE_URL: http://search-service:8087
      FRIEND_SERVICE_URL: http://friend-service:8088
      MEDIA_SERVICE_URL: http://media-service:8089
    depends_on:
      - user-service
      - post-service
      - feed-service
      - feedback-service
      - chat-service
      - notification-service
      - search-service
      - friend-service
      - media-service
    networks:
      - socialnet
    ports:
      - "8080:8080"

  #################################################################
  #                    SWAGGER UI FOR DOCS
  #################################################################
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    depends_on:
      - api-gateway
    ports:
      - "9002:8080"
    environment:
      SWAGGER_JSON: /openapi/combined_openapi.yaml
    volumes:
      - ./combined_openapi.yaml:/openapi/combined_openapi.yaml:ro
    networks:
      - socialnet

networks:
  socialnet:

volumes:
  # Postgres
  user_db_data:
  post_db_data:
  feed_db_data:
  feedback_db_data:
  chat_db_data:
  notification_db_data:

  # Redis
  redis_data:

  # MinIO
  minio_data:
