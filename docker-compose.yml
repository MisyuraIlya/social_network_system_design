version: '3.9'

services:
  #################################################################
  #                           DATABASES                           #
  #################################################################
  users-db:
    image: postgres:15
    container_name: users-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpass
      POSTGRES_DB: users_db
    volumes:
      - users_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  post-db:
    image: postgres:15
    container_name: post-db
    environment:
      POSTGRES_USER: post
      POSTGRES_PASSWORD: postpass
      POSTGRES_DB: post_db
    volumes:
      - post_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  feed-db:
    image: postgres:15
    container_name: feed-db
    environment:
      POSTGRES_USER: feed
      POSTGRES_PASSWORD: feedpass
      POSTGRES_DB: feed_db
    volumes:
      - feed_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  message-db:
    image: postgres:15
    container_name: message-db
    environment:
      POSTGRES_USER: message
      POSTGRES_PASSWORD: messagepass
      POSTGRES_DB: message_db
    volumes:
      - message_db_data:/var/lib/postgresql/data
    networks:
      - socialnet

  #################################################################
  #                       CACHE / S3 / QUEUE                      #
  #################################################################
  redis:
    image: redis:7
    container_name: redis-social
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    networks:
      - socialnet

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - socialnet

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
    - socialnet

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - socialnet



  #################################################################
  #                        CORE SERVICES                          #
  #################################################################
  users-service:
    container_name: users-service
    build: ./services/users-service
    environment:
      DB_HOST: users-db
      DB_USER: user
      DB_PASSWORD: userpass
      DB_NAME: users_db
    depends_on:
      - users-db
    networks:
      - socialnet
    ports:
      - "8081:8081"

  post-service:
    container_name: post-service
    build: ./services/post-service
    environment:
      DB_HOST: post-db
      DB_USER: post
      DB_PASSWORD: postpass
      DB_NAME: post_db
      MEDIA_SERVICE_URL: http://media-service:8084
      KAFKA_BROKER_URL: kafka:9092
    depends_on:
      - post-db
      - kafka
    networks:
      - socialnet
    ports:
      - "8082:8082"

  feed-service:
    container_name: feed-service
    build: ./services/feed-service
    environment:
      DB_HOST: feed-db
      DB_USER: feed
      DB_PASSWORD: feedpass
      DB_NAME: feed_db
      REDIS_HOST: redis
      KAFKA_BROKER_URL: kafka:9092
    depends_on:
      - feed-db
      - redis
      - kafka
    networks:
      - socialnet
    ports:
      - "8083:8083"

  media-service:
    container_name: media-service
    build: ./services/media-service
    environment:
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minio
      S3_SECRET_KEY: minio123
    depends_on:
      - minio
    networks:
      - socialnet
    ports:
      - "8084:8084"

  feedback-service:
    container_name: feedback-service
    build: ./services/feedback-service
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis
    networks:
      - socialnet
    ports:
      - "8085:8085"

  message-service:
    container_name: message-service
    build: ./services/message-service
    environment:
      DB_HOST: message-db
      DB_USER: message
      DB_PASSWORD: messagepass
      DB_NAME: message_db
      REDIS_HOST: redis
    depends_on:
      - message-db
      - redis
    networks:
      - socialnet
    ports:
      - "8086:8086"

  #################################################################
  #                         API GATEWAY                           #
  #################################################################
  api-gateway:
    container_name: api-gateway
    build: ./services/api-gateway
    environment:
      USERS_SERVICE_URL: http://users-service:8081
      POST_SERVICE_URL: http://post-service:8082
      FEED_SERVICE_URL: http://feed-service:8083
      MEDIA_SERVICE_URL: http://media-service:8084
      FEEDBACK_SERVICE_URL: http://feedback-service:8085
      MESSAGE_SERVICE_URL: http://message-service:8086
    depends_on:
      - users-service
      - post-service
      - feed-service
      - media-service
      - feedback-service
      - message-service
    networks:
      - socialnet
    ports:
      - "8080:8080"

volumes:
  users_db_data:
  post_db_data:
  feed_db_data:
  message_db_data:
  redis_data:
  minio_data:

networks:
  socialnet:
