# /etc/nginx/nginx.conf

worker_processes auto;

events { worker_connections 1024; }

http {
  sendfile on; tcp_nopush on; tcp_nodelay on;
  keepalive_timeout 65; types_hash_max_size 4096;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log warn;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  gzip on; gzip_min_length 1024; gzip_comp_level 5;
  gzip_types application/json application/javascript text/css text/plain text/xml;

  # -------- Upstreams --------
  upstream user_service         { least_conn; server user-service:8081; keepalive 32; }
  upstream post_service         { least_conn; server post-service:8082; keepalive 32; }
  upstream feed_service         { least_conn; server feed-service:8083; keepalive 32; }
  upstream feedback_service     { least_conn; server feedback-service:8084; keepalive 32; }
  upstream message_service      { least_conn; server message-service:8085; keepalive 32; }
  upstream notification_service { least_conn; server notification-service:8086; keepalive 32; }
  upstream media_service        { least_conn; server media-service:8088; keepalive 32; }

  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  proxy_read_timeout    60s;
  proxy_send_timeout    60s;
  proxy_connect_timeout 5s;
  proxy_http_version    1.1;

  server {
    listen 80 default_server;
    server_name _;

    # Health & root
    location = /nginx/health { add_header Content-Type text/plain; return 200 'ok'; }
    location = / { add_header Content-Type text/plain; return 200 'socialnet gateway'; }

    # ==========================================================
    # Special /api/users/* routes that go to OTHER services
    # (These regex locations must be tried; don't block with ^~)
    # ==========================================================
    # /api/users/{id}/feed -> feed-service
    location ~ ^/api/users/[^/]+/feed(?:/.*)?$ {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/users/[^/]+/feed.*)$ $1 break;
      proxy_pass http://feed_service;
    }

    # /api/users/{id}/posts -> post-service
    location ~ ^/api/users/[^/]+/posts(?:/.*)?$ {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/users/[^/]+/posts.*)$ $1 break;
      proxy_pass http://post_service;
    }

    # =========================
    # User Service (generic)
    # =========================
    location = /api/users {
      client_max_body_size 5m;
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      proxy_pass http://user_service/users;
    }

    # IMPORTANT: no ^~ here â€” allow regex exceptions above to win
    location /api/users/ {
      client_max_body_size 5m;
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/users/.*)$ $1 break;
      proxy_pass http://user_service;
    }

    # =========================
    # Post Service
    # =========================
    location = /api/posts {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      proxy_pass http://post_service/posts;
    }
    location ^~ /api/posts/ {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/posts/.*)$ $1 break;
      proxy_pass http://post_service;
    }

    # =========================
    # Feed Service
    # =========================
    location ^~ /api/feed/ {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/feed/.*)$ $1 break;
      proxy_pass http://feed_service;
    }
    location = /api/celebrities {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      proxy_pass http://feed_service/celebrities;
    }
    location ^~ /api/celebrities/ {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/celebrities/.*)$ $1 break;
      proxy_pass http://feed_service;
    }

    # =========================
    # Feedback Service
    # =========================
    location = /api/feedback {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      proxy_pass http://feedback_service/;
    }
    location ^~ /api/feedback/ {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api/feedback/?(.*)$ /$1 break;
      proxy_pass http://feedback_service;
    }

    # =========================
    # Message Service
    # =========================
    location ^~ /api/messages {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      rewrite ^/api(/messages.*)$ $1 break;
      proxy_pass http://message_service;
    }
    location ^~ /api/chats {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      rewrite ^/api(/chats.*)$ $1 break;
      proxy_pass http://message_service;
    }

    # =========================
    # Notification Service
    # =========================
    location = /api/notifications {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      proxy_pass http://notification_service/notifications;
    }
    location ^~ /api/notifications/ {
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/notifications/.*)$ $1 break;
      proxy_pass http://notification_service;
    }

    # =========================
    # Media Service
    # =========================
    location = /api/media {
      client_max_body_size 100m; proxy_read_timeout 300s;
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      proxy_pass http://media_service/media;
    }
    location ^~ /api/media/ {
      client_max_body_size 100m; proxy_read_timeout 300s;
      proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Connection "";
      rewrite ^/api(/media/.*)$ $1 break;
      proxy_pass http://media_service;
    }

    # Catch-all
    location ^~ /api/ {
      add_header Content-Type application/json;
      return 404 '{"error":"unknown route"}';
    }
  }
}
